name: UI Tests
on:
  push:
    branches:
      - develop

# Self hosted runners seem to have trouble managing certs the way github hosted runners do
# So this job is setup expecting the certs to be installed on the machine and accessible to Xcode
jobs:
  deploy:
    name: Run UI Tests
    runs-on: self-hosted
    steps:
      - name: Select Xcode version
        run: sudo xcode-select -s '/Applications/Xcode.app/Contents/Developer'
        
      - name: Checkout repository
        uses: actions/checkout@v4.1.1

      - name: Setup Global Env
        run: |
          echo "CONFIG_1=${{ secrets.UITEST_CONFIG_1 }}" >> $GITHUB_ENV
          echo "CONFIG_2=${{ secrets.UITEST_CONFIG_2 }}" >> $GITHUB_ENV
          echo "CONFIG_3=${{ secrets.UITEST_CONFIG_3 }}" >> $GITHUB_ENV

      - name: Build and run tests
        run: |
          xcodebuild -project "Kukai Mobile.xcodeproj" \
          -sdk iphonesimulator -destination "platform=iOS Simulator,name=iPhone 16,OS=18.5" \
          -scheme "Kukai Mobile Beta" \
          -resultBundlePath TestResults \
          -configuration Beta \
          -archivePath $PWD/build/Kukai-mobile.xcarchive \
          -derivedDataPath $PWD/build/ \
          -enableCodeCoverage YES \
          clean \
          archive \
          test \
          CONFIG_1="$CONFIG_1" \
          CONFIG_2="$CONFIG_2" \
          CONFIG_3="$CONFIG_3"

      - name: Upload xcresult file
        if: ${{ success() || failure() }}
        id: upload_artifact
        uses: actions/upload-artifact@v4
        with:
          name: TestResults-${{ github.run_number }}.xcresult
          path: TestResults.xcresult
        
        # Run xcresultparser on the output file to generate a markdown summary
        # Grab the artifact URL from the previous step (new addtion to v4)
        # Use a bot webhook to post the details to slack, with a link to download the full thing if needed
        # Couldn't figure out how to upload the file directly to slack, the github action integration just sliently fails to everything without posting any error codes
      - name: Report to slack
        if: ${{ success() || failure() }}
        run: |
            number_of_tests_string=$(xcrun xcresulttool get --legacy --path TestResults.xcresult --format json | jq '.metrics.testsCount._value // "0"')
            number_of_tests_formatted=$(echo "$number_of_tests_string" | tr -d '"')
            number_of_test_fails_string=$(xcrun xcresulttool get --legacy --path TestResults.xcresult --format json | jq '.metrics.testsFailedCount._value // "0"')
            number_of_test_fails_formatted=$(echo "$number_of_test_fails_string" | tr -d '"')

            coverage_percent_string=$(xcrun xcresulttool get --legacy --path TestResults.xcresult --format json | jq '.metrics.totalCoveragePercentage._value // "0"')
            coverage_clean_value=$(echo "$coverage_percent_string" | sed 's/[^0-9\.]//g')
            coverage_percentage=$(echo "$coverage_clean_value * 100" | bc -l)
            coverage_formatted_percentage=$(printf "%.2f%%" "$coverage_percentage")
            
            app_version=$(/usr/libexec/PlistBuddy -c "Print :ApplicationProperties:CFBundleShortVersionString" $PWD/build/Kukai-mobile.xcarchive/Info.plist)
            app_build=$(/usr/libexec/PlistBuddy -c "Print :ApplicationProperties:CFBundleVersion" $PWD/build/Kukai-mobile.xcarchive/Info.plist)


            slack_message_title="Automated UI test run for $app_version ($app_build): "
            slack_message_emoji=""
            slack_message_body=""
            if [[ $number_of_test_fails_string == "0" ]] 
            then
                slack_message_title+="SUCCESS "
                slack_message_emoji="white_check_mark"
                slack_message_body+="\n\nTests: \t\t$number_of_tests_formatted\n"
            else
                slack_message+="FAILURE "
                slack_message_emoji="x"
                slack_message_body+="\n\nTests: \t\t$number_of_tests_formatted\n"
                slack_message_body+="Failures: \t$number_of_test_fails_formatted\n"
            fi

            slack_message_body+="Coverage: \t${coverage_formatted_percentage}\n"




            curl -0 -v -X POST ${{ secrets.SLACK_INCOMING_WEBHOOK }} \
            -H "Expect:" \
            -H 'Content-Type: application/json; charset=utf-8' \
            --data-raw '
            {
                "blocks": [
                    {
                        "type": "rich_text",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "'"${slack_message_title}"'"
                                    },
                                    {
                                        "type": "emoji",
                                        "name": "'"${slack_message_emoji}"'"
                                    },
                                    {
                                        "type": "text",
                                        "text": "'"${slack_message_body}"'"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "Download full file from runner <${{ steps.upload_artifact.outputs.artifact-url }}|Here>"
                        }
                    }
                ]
            }'
